---
http_interactions:
- request:
    method: get
    uri: https://www.myzivi.ch/feeds/standard.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 17 Apr 2021 22:28:33 GMT
      Content-Type:
      - text/xml; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Set-Cookie:
      - PHPSESSID=7ud65lovqau60eq77j3qbtq824; path=/
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      Server:
      - sjb-nginx
      Expect-Ct:
      - max-age=0; report-uri="https://www.smartjobboard.com/ca/ct.php"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 17 Apr 2021 22:28:33 GMT
recorded_with: VCR 6.0.0
